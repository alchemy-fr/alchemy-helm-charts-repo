{{- if .Values.mysql.mysqlBackup.pre-upgrade_backup }}
apiVersion: batch/v1
kind: Job
metadata:
  name: mysql-backup-pre-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      containers:
      - name: mysql-backup
        image: {{ .Values.mysqlBackup.image }}
        env:
        - name: MYSQL_HOST
          value: {{ .Values.app.phraseanet_db_host | quote }}
        - name: MYSQL_USER
          value: {{ .Values.app.phraseanet_db_user | quote  }}
        - name: MYSQL_PASS
          value: {{ .Values.app.phraseanet_db_password | quote }}
        - name: MAX_BACKUPS
          value: "{{ .Values.mysql.mysqlBackup.maxBackups }}"
        - name: INIT_BACKUP
          value: "{{ .Values.mysql.mysqlBackup.initBackup }}"
        - name: INIT_RESTORE_LATEST
          value: "{{ .Values.mysql.mysqlBackup.initRestoreLatest }}"
        - name: CRON_TIME
          value: {{ .Values.mysql.mysqlBackup.cronTime }}
        - name: GZIP_LEVEL
          value: "{{ .Values..mysql.mysqlBackup.gzipLevel }}"
        volumeMounts:
        - name: backup-volume
          mountPath: mountPath: "/var/alchemy/Phraseanet/backup"
      volumes:
      - name: backup-volume
        hostPath:
          path: {{ .Values.mysqlBackup.backupVolumePath }}
      restartPolicy: Never
  backoffLimit: 1
{{- end }}
